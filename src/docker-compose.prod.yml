version: '3.4'

# The Production docker-compose file has to have the external/real IPs or DNS names for the services
# The CSP_PROD_EXTERNAL_DNS_NAME_OR_IP environment variable is taken, by default, from the ".env" file defined like:
#     CSP_PROD_EXTERNAL_DNS_NAME_OR_IP=192.168.88.248
# but values present in the environment vars at runtime will always override those defined inside the .env file
# An external IP or DNS name has to be used when testing the Web apps and the Xamarin apps from remote machines/devices using the same WiFi, for instance.
#
# IMPORTANT: Note that this compose file uses CSP_PROD_EXTERNAL_DNS_NAME_OR_IP instead of CSP_EXTERNAL_DNS_NAME_OR_IP

# Set ASPNETCORE_ENVIRONMENT= Development or Production, depending if you want to show up errors while testing.
#
# You need to start it with the following CLI command:
# docker-compose -f docker-compose.yml -f docker-compose.prod.yml up

services:

  identity-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - SpaClient=http://${CSP_PROD_EXTERNAL_DNS_NAME_OR_IP}:5104
      - XamarinCallback=http://${CSP_PROD_EXTERNAL_DNS_NAME_OR_IP}:5105/xamarincallback      #localhost do not work for UWP login, so we have to use "external" IP always
      - ConnectionString=${CSP_AZURE_IDENTITY_DB:-Database=Corpspace.Services.IdentityDb;User Id=corpspace;Password=corpspace;Host=localhost;Port=5432;sslmode=false;}
      - MobileAggClient=http://${CSP_PROD_EXTERNAL_DNS_NAME_OR_IP}:5120
      - WebAggClient=http://${CSP_PROD_EXTERNAL_DNS_NAME_OR_IP}:5121
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "5105:80"

  angular-client:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - IdentityUrl=http://${CSP_PROD_EXTERNAL_DNS_NAME_OR_IP}:5105              #Local: You need to open your local dev-machine firewall at range 5100-5105.  at range 5100-5105.
      - PurchaseUrl=http://${CSP_PROD_EXTERNAL_DNS_NAME_OR_IP}:5202
      - IdentityUrlHC=http://identity-api/hc     #Local: Use ${CSP_PROD_EXTERNAL_DNS_NAME_OR_IP}, if using external IP or DNS name from browser.
      - PaymentUrlHC=http://payment-api/hc
      - UseCustomizationData=True
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "5104:80"

  web-status:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - IdentityUrl=http://identity-api/hc
      - PaymentUrl=http://payment-api/hc
      - spa=http://angular-client/hc
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "5107:80"

  payment-api:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - EventBusConnection=${CSP_AZURE_SERVICE_BUS:-rabbitmq}
      - EventBusUserName=${CSP_SERVICE_BUS_USERNAME}
      - EventBusPassword=${CSP_SERVICE_BUS_PASSWORD}
      - AzureServiceBusEnabled=False
      - ApplicationInsights__InstrumentationKey=${INSTRUMENTATION_KEY}
      - OrchestratorType=${ORCHESTRATOR_TYPE}
    ports:
      - "80"   # The API Gateway redirects and access through the internal port (80).

  postgresql:
    environment:
      - POSTGRES_USER=corpspace
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "127.0.0.1:5432:5432"

  nosqldata:
    ports:
      - "27017:27017"  # Important: In a production environment your should remove the external port

  redis:
    ports:
      - "6379:6379"    # Important: In a production environment your should remove the external port

  rabbitmq:
    ports:
      - "15672:15672"  # Important: In a production environment your should remove the external port
      - "5672:5672"    # Important: In a production environment your should remove the external port

  mobile-api-gw:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityUrl=http://identity-api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5200:80"   # Important: In a production environment your should remove the external port (5200) kept here for microservice debugging purposes.
                    # The API Gateway redirects and access through the internal port (80).
    volumes:
      - ./ApiGateways/Corpspace.Bff.Mobile/apigw:/app/configuration

  web-api-gw:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityUrl=http://identity-api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "5202:80"   # Important: In a production environment your should remove the external port (5202) kept here for microservice debugging purposes.
                    # The API Gateway redirects and access through the internal port (80).
    volumes:
      - ./ApiGateways/Corpspace.Bff.Web/apigw:/app/configuration

  mobile-agg:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - urls__identity=http://identity-api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "80"   # Important: In a production environment your should remove the external port (5120) kept here for microservice debugging purposes.
                    # The API Gateway redirects and access through the internal port (80).

  web-agg:
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - urls__identity=http://identity-api              #Local: You need to open your local dev-machine firewall at range 5100-5110.
    ports:
      - "80"   # Important: In a production environment your should remove the external port (5121) kept here for microservice debugging purposes.
                    # The API Gateway redirects and access through the internal port (80).

